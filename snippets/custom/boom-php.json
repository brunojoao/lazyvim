{
  "boom_db_insert": {
    "prefix": ["boom_db_insert"],
    "body": [
      "try {",
      "\t\\$sqlBuild = SqlBuild::insert(\"sis_${1:table_name}\", \\$data);",
      "\t\\$statement = \\$this->adapter->createStatement(\\$sqlBuild[\"sql\"]);",
      "\t\\$statement->execute(\\$sqlBuild[\"parameters\"]);",
      "\t\\$lastInsertId = \\$this->adapter->getDriver()->getLastGeneratedValue();",
	  "\treturn \\$lastInsertId;",
	  "\t} catch (Exception \\$e) {",
	  "\thandleException(\\$e, '${2:module_name}', false, json_encode(\\$sqlBuild));",
	  "}"
    ],
    "description": "Boom snippet para inset com proteção de injection"
  },
  "boom_db_update": {
    "prefix": ["boom_db_update"],
    "body": [
      "try {",
      "\t\\$criteria = ['${1:key}_id' => ${2:value}];",
      "\t\\$sqlBuild = SqlBuild::update(\"sis_${1:table_name}\",\\$data, \\$criteria);",
      "\t\\$statement = \\$this->adapter->createStatement(\\$sqlBuild[\"sql\"]);",
      "\t\\$result = \\$statement->execute(\\$sqlBuild[\"parameters\"]);",
      "\treturn \\$result->getAffectedRows() > 0;",
	  "\t} catch (Exception \\$e) {",
	  "\thandleException(\\$e, '${3:module_name}', false, json_encode(\\$sqlBuild));",
	  "}"
    ],
    "description": "Construtor de operações de update no banco de dados utilizando SqlBuild."
  },
  "boom_handle_exception": {
    "prefix": ["boom_handle_exception"],
    "body": ["handleException(\\$e, '${1:module_name}', false);"],
    "description": "Construtor de operações de update no banco de dados utilizando SqlBuild."
  }
}
